name: Release Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: eunheejo/llmplan
  CHART_PATH: charts/llmplan

jobs:
  # Step 1: Build and Push Docker Image
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false

      - name: Update Docker Hub description
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md

  # Step 2: Release Helm Chart (depends on Docker)
  helm-release:
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: "3.14.0"

      - name: Update Chart with Docker image tag
        run: |
          # Extract the main tag (without registry prefix)
          DOCKER_TAG=$(echo "${{ needs.docker.outputs.image-tag }}" | head -n1 | cut -d' ' -f1 | cut -d':' -f2)
          echo "Using Docker tag: $DOCKER_TAG"
          
          # Update values.yaml with the new image tag
          sed -i "s/tag: .*/tag: \"$DOCKER_TAG\"/" ${{ env.CHART_PATH }}/values.yaml
          
          # Update Chart.yaml appVersion
          sed -i "s/appVersion: .*/appVersion: \"$DOCKER_TAG\"/" ${{ env.CHART_PATH }}/Chart.yaml

      - name: Lint Helm Chart
        run: |
          helm lint ${{ env.CHART_PATH }}

      - name: Package Helm Chart
        run: |
          helm package ${{ env.CHART_PATH }} --destination ./helm-packages

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts
          config: .github/cr.yaml
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  # Step 3: Publish Helm Chart to OCI (for tagged releases)
  helm-oci:
    runs-on: ubuntu-latest
    needs: [docker, helm-release]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: "3.14.0"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Package and Push Helm Chart to OCI
        run: |
          helm package ${{ env.CHART_PATH }}
          helm push llmplan-*.tgz oci://registry-1.docker.io/eunheejo
